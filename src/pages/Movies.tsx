import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import Icon from "@/components/ui/icon";
import Header from "@/components/Header";

interface Episode {
  id: number;
  title: string;
  description: string;
  duration: string;
  thumbnail: string;
  videoUrl: string;
  difficulty: "easy" | "medium" | "hard";
  topics: string[];
}

const Movies = () => {
  const [selectedEpisode, setSelectedEpisode] = useState<Episode | null>(null);
  const [isPlaying, setIsPlaying] = useState(false);

  const episodes: Episode[] = [
    {
      id: 1,
      title: "–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–º",
      description:
        "–ü–µ—Ç—è –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –≤–µ–ª–æ—Å–∏–ø–µ–¥ –∏ —É—á–∏—Ç—Å—è –æ—Å–Ω–æ–≤–∞–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –µ–∑–¥—ã",
      duration: "8:30",
      thumbnail: "üö¥‚Äç‚ôÇÔ∏è",
      videoUrl: "#",
      difficulty: "easy",
      topics: ["–û—Å–Ω–æ–≤—ã", "–ü–µ—Ä–≤–∞—è –ø–æ–µ–∑–¥–∫–∞", "–®–ª–µ–º"],
    },
    {
      id: 2,
      title: "–ü—Ä–∞–≤–∏–ª–∞ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è",
      description: "–ò–∑—É—á–∞–µ–º –¥–æ—Ä–æ–∂–Ω—ã–µ –∑–Ω–∞–∫–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤–µ–ª–æ—Å–∏–ø–µ–¥–∏—Å—Ç–æ–≤",
      duration: "10:15",
      thumbnail: "üö¶",
      videoUrl: "#",
      difficulty: "medium",
      topics: ["–ü–î–î", "–ó–Ω–∞–∫–∏", "–°–≤–µ—Ç–æ—Ñ–æ—Ä"],
    },
    {
      id: 3,
      title: "–í–µ–ª–æ–¥–æ—Ä–æ–∂–∫–∏ –∏ —Ç—Ä–æ—Ç—É–∞—Ä—ã",
      description: "–ì–¥–µ –º–æ–∂–Ω–æ, –∞ –≥–¥–µ –Ω–µ–ª—å–∑—è –µ–∑–¥–∏—Ç—å –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ",
      duration: "7:45",
      thumbnail: "üõ£Ô∏è",
      videoUrl: "#",
      difficulty: "easy",
      topics: ["–í–µ–ª–æ–¥–æ—Ä–æ–∂–∫–∏", "–¢—Ä–æ—Ç—É–∞—Ä", "–î–æ—Ä–æ–≥–∞"],
    },
    {
      id: 4,
      title: "–ù–æ—á–Ω–∞—è –µ–∑–¥–∞",
      description: "–ö–∞–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è –≤ —Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫",
      duration: "9:20",
      thumbnail: "üåô",
      videoUrl: "#",
      difficulty: "hard",
      topics: ["–ù–æ—á—å", "–§–æ–Ω–∞—Ä–∏", "–°–≤–µ—Ç–æ–æ—Ç—Ä–∞–∂–∞—Ç–µ–ª–∏"],
    },
    {
      id: 5,
      title: "–ü–æ–≤–æ—Ä–æ—Ç –Ω–∞–ª–µ–≤–æ",
      description: "–£—á–∏–º—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å –Ω–∞ –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∫–∞—Ö",
      duration: "6:55",
      thumbnail: "‚Ü©Ô∏è",
      videoUrl: "#",
      difficulty: "medium",
      topics: ["–ü–æ–≤–æ—Ä–æ—Ç—ã", "–ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫", "–°–∏–≥–Ω–∞–ª—ã"],
    },
    {
      id: 6,
      title: "–í–µ–ª–æ—Å–∏–ø–µ–¥ –≤ –¥–æ–∂–¥—å",
      description: "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –µ–∑–¥—ã –≤ –ø–ª–æ—Ö—É—é –ø–æ–≥–æ–¥—É",
      duration: "8:10",
      thumbnail: "üåßÔ∏è",
      videoUrl: "#",
      difficulty: "hard",
      topics: ["–î–æ–∂–¥—å", "–¢–æ—Ä–º–æ–∂–µ–Ω–∏–µ", "–í–∏–¥–∏–º–æ—Å—Ç—å"],
    },
  ];

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case "easy":
        return "bg-green-500";
      case "medium":
        return "bg-yellow-500";
      case "hard":
        return "bg-red-500";
      default:
        return "bg-gray-500";
    }
  };

  const getDifficultyText = (difficulty: string) => {
    switch (difficulty) {
      case "easy":
        return "–ù–∞—á–∞–ª—å–Ω—ã–π";
      case "medium":
        return "–°—Ä–µ–¥–Ω–∏–π";
      case "hard":
        return "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π";
      default:
        return "";
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-purple-50">
      <Header />

      <div className="container mx-auto px-4 py-8">
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-800 mb-4">
            üé¨ –ú—É–ª—å—Ç–∏–∫–∏ –æ –≤–µ–ª–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
          </h1>
          <p className="text-xl text-gray-600">
            –ò–∑—É—á–∞–π –ø—Ä–∞–≤–∏–ª–∞ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –≤–º–µ—Å—Ç–µ —Å –≥–µ—Ä–æ—è–º–∏ –Ω–∞—à–∏—Ö
            –º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤!
          </p>
        </div>

        <div className="grid lg:grid-cols-3 gap-8">
          {/* –í–∏–¥–µ–æ–ø–ª–µ–µ—Ä */}
          <div className="lg:col-span-2">
            <Card className="overflow-hidden">
              <div className="aspect-video bg-gradient-to-br from-blue-400 to-purple-600 relative flex items-center justify-center">
                {selectedEpisode ? (
                  <div className="text-center text-white">
                    <div className="text-8xl mb-4">
                      {selectedEpisode.thumbnail}
                    </div>
                    <h3 className="text-2xl font-bold mb-2">
                      {selectedEpisode.title}
                    </h3>
                    <p className="text-blue-100 mb-4">
                      {selectedEpisode.description}
                    </p>
                    <Button
                      size="lg"
                      className="bg-white text-blue-600 hover:bg-blue-50"
                      onClick={() => setIsPlaying(!isPlaying)}
                    >
                      <Icon
                        name={isPlaying ? "Pause" : "Play"}
                        className="mr-2"
                        size={20}
                      />
                      {isPlaying ? "–ü–∞—É–∑–∞" : "–°–º–æ—Ç—Ä–µ—Ç—å"}
                    </Button>
                  </div>
                ) : (
                  <div className="text-center text-white">
                    <div className="text-8xl mb-4">üé≠</div>
                    <h3 className="text-2xl font-bold mb-2">–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–∏—é</h3>
                    <p className="text-blue-100">
                      –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ª—é–±—É—é —Å–µ—Ä–∏—é —Å–ª–µ–≤–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä
                    </p>
                  </div>
                )}
              </div>

              {selectedEpisode && (
                <CardContent className="p-6">
                  <div className="flex items-center justify-between mb-4">
                    <h2 className="text-2xl font-bold text-gray-800">
                      {selectedEpisode.title}
                    </h2>
                    <div className="flex items-center space-x-2">
                      <span
                        className={`px-2 py-1 rounded-full text-xs text-white ${getDifficultyColor(selectedEpisode.difficulty)}`}
                      >
                        {getDifficultyText(selectedEpisode.difficulty)}
                      </span>
                      <span className="text-gray-500">
                        {selectedEpisode.duration}
                      </span>
                    </div>
                  </div>

                  <p className="text-gray-600 mb-4">
                    {selectedEpisode.description}
                  </p>

                  <div className="flex flex-wrap gap-2">
                    {selectedEpisode.topics.map((topic, index) => (
                      <span
                        key={index}
                        className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm"
                      >
                        {topic}
                      </span>
                    ))}
                  </div>
                </CardContent>
              )}
            </Card>
          </div>

          {/* –°–ø–∏—Å–æ–∫ —Å–µ—Ä–∏–π */}
          <div className="space-y-4">
            <h2 className="text-2xl font-bold text-gray-800 mb-4">
              üì∫ –í—Å–µ —Å–µ—Ä–∏–∏
            </h2>

            {episodes.map((episode) => (
              <Card
                key={episode.id}
                className={`cursor-pointer transition-all duration-200 hover:shadow-lg hover:-translate-y-1 ${
                  selectedEpisode?.id === episode.id
                    ? "ring-2 ring-blue-500 shadow-lg"
                    : ""
                }`}
                onClick={() => setSelectedEpisode(episode)}
              >
                <CardContent className="p-4">
                  <div className="flex items-start space-x-3">
                    <div className="text-3xl">{episode.thumbnail}</div>
                    <div className="flex-1 min-w-0">
                      <h3 className="font-semibold text-gray-800 truncate">
                        {episode.title}
                      </h3>
                      <p className="text-sm text-gray-600 mt-1 line-clamp-2">
                        {episode.description}
                      </p>
                      <div className="flex items-center justify-between mt-2">
                        <span className="text-xs text-gray-500">
                          {episode.duration}
                        </span>
                        <span
                          className={`px-2 py-1 rounded text-xs text-white ${getDifficultyColor(episode.difficulty)}`}
                        >
                          {getDifficultyText(episode.difficulty)}
                        </span>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ */}
        <div className="mt-12 grid md:grid-cols-4 gap-6">
          <Card className="text-center p-6">
            <div className="text-3xl mb-2">üëÄ</div>
            <div className="text-2xl font-bold text-blue-600">12,543</div>
            <div className="text-gray-600">–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</div>
          </Card>
          <Card className="text-center p-6">
            <div className="text-3xl mb-2">‚≠ê</div>
            <div className="text-2xl font-bold text-yellow-600">4.9</div>
            <div className="text-gray-600">–†–µ–π—Ç–∏–Ω–≥</div>
          </Card>
          <Card className="text-center p-6">
            <div className="text-3xl mb-2">üéØ</div>
            <div className="text-2xl font-bold text-green-600">89%</div>
            <div className="text-gray-600">–ü—Ä–æ—à–ª–∏ —Ç–µ—Å—Ç</div>
          </Card>
          <Card className="text-center p-6">
            <div className="text-3xl mb-2">üèÜ</div>
            <div className="text-2xl font-bold text-purple-600">156</div>
            <div className="text-gray-600">–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤</div>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default Movies;
